@use "../../../styles/mixins";

.button {
  @include mixins.button-base();
  gap: 0;

  &--has-icon {
    gap: 0.5rem;
  }

  &:not(.button--has-icon) {
    .button__text {
      text-align: center;
      width: 100%;
    }
  }

  &--small {
    @include mixins.padding-sm();
    @include mixins.text-sm();
    min-height: 2rem;
  }

  &--medium {
    @include mixins.padding-md();
    @include mixins.text-sm();
    min-height: 2.5rem;
  }

  &--large {
    @include mixins.padding-lg();
    @include mixins.text-base();
    min-height: 3rem;
  }

  &--primary {
    @include mixins.color-variant("primary");
    @include mixins.hover-lift(-1px, 0 4px 12px rgba(59, 130, 246, 0.3));

    &:active:not(:disabled) {
      transform: translateY(0);
      box-shadow: 0 2px 4px rgba(59, 130, 246, 0.2);
    }
  }

  &--secondary {
    @include mixins.color-variant("secondary");
    @include mixins.hover-lift(-1px, 0 2px 8px rgba(0, 0, 0, 0.1));

    &:active:not(:disabled) {
      transform: translateY(0);
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    }
  }

  &--danger {
    @include mixins.color-variant("error");
    @include mixins.hover-lift(-1px, 0 4px 12px rgba(239, 68, 68, 0.3));

    &:active:not(:disabled) {
      transform: translateY(0);
      box-shadow: 0 2px 4px rgba(239, 68, 68, 0.2);
    }
  }

  &--ghost {
    background-color: transparent;
    color: var(--form-gray-700);
    border-color: transparent;

    &:hover:not(:disabled) {
      background-color: var(--form-gray-100);
      color: var(--form-gray-900);
      @include mixins.hover-lift(-1px);
    }

    &:active:not(:disabled) {
      transform: translateY(0);
    }
  }

  &--full-width {
    width: 100%;
  }

  &--icon-only {
    @include mixins.padding-sm();
    min-width: 2.5rem;

    &.button--small {
      @include mixins.padding-sm();
      min-width: 2rem;
    }

    &.button--large {
      @include mixins.padding-lg();
      min-width: 3rem;
    }
  }

  &--loading {
    cursor: wait;
    pointer-events: none;

    .button__text {
      opacity: 0.7;
    }
  }
}

.button__spinner {
  @include mixins.flex-center();
}

.button__spinner-svg {
  width: 1rem;
  height: 1rem;
  @include mixins.spin();

  .button--small & {
    width: 0.875rem;
    height: 0.875rem;
  }

  .button--large & {
    width: 1.25rem;
    height: 1.25rem;
  }
}

.button__icon--left {
  margin-right: 0.25rem;
}

.button__icon--right {
  margin-left: 0.25rem;
}

.button__text {
  display: inline-block;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: reduce) {
  .button {
    transition: none;

    &:hover:not(:disabled) {
      transform: none;
    }
  }

  .button__spinner-svg {
    animation: none;
  }
}

@include mixins.mobile() {
  .button {
    &--medium {
      @include mixins.padding-lg();
      @include mixins.text-sm();
    }

    &--large {
      @include mixins.padding-xl();
      @include mixins.text-base();
    }
  }
}
