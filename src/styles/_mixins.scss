@mixin mobile {
  @media (max-width: 480px) {
    @content;
  }
}

@mixin tablet {
  @media (max-width: 768px) {
    @content;
  }
}

@mixin desktop {
  @media (max-width: 1024px) {
    @content;
  }
}

@mixin large-desktop {
  @media (max-width: 1280px) {
    @content;
  }
}

@mixin transition($property: all, $duration: 0.2s, $timing: ease-in-out) {
  transition: $property $duration $timing;
}

@mixin transition-fast {
  transition: all 0.15s ease;
}

@mixin transition-normal {
  transition: all 0.2s ease-in-out;
}

@mixin transition-slow {
  transition: all 0.3s ease;
}

@mixin focus-ring($color: var(--form-primary), $offset: 2px) {
  &:focus {
    outline: 2px solid $color;
    outline-offset: $offset;
  }
}

@mixin focus-visible($color: var(--form-primary)) {
  &:focus-visible {
    box-shadow: 0 0 0 2px $color;
  }
}

@mixin hover-lift($distance: -1px, $shadow: 0 4px 12px rgba(0, 0, 0, 0.15)) {
  &:hover:not(:disabled) {
    transform: translateY($distance);
    box-shadow: $shadow;
  }
}

@mixin hover-scale($scale: 1.05) {
  &:hover {
    transform: scale($scale);
  }
}

@mixin border-radius($radius: var(--form-border-radius)) {
  border-radius: $radius;
}

@mixin border-light {
  border: 1px solid var(--form-gray-200);
}

@mixin shadow-sm {
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
}

@mixin shadow-md {
  box-shadow:
    0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

@mixin shadow-lg {
  box-shadow:
    0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

@mixin shadow-xl {
  box-shadow:
    0 20px 25px -5px rgba(0, 0, 0, 0.1),
    0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin text-xs {
  font-size: 0.75rem;
  line-height: 1.4;
}

@mixin text-sm {
  font-size: 0.875rem;
  line-height: 1.4;
}

@mixin text-base {
  font-size: 1rem;
  line-height: 1.5;
}

@mixin text-lg {
  font-size: 1.125rem;
  line-height: 1.5;
}

@mixin text-xl {
  font-size: 1.25rem;
  line-height: 1.4;
}

@mixin text-2xl {
  font-size: 1.5rem;
  line-height: 1.4;
}

@mixin font-medium {
  font-weight: 500;
}

@mixin font-semibold {
  font-weight: 600;
}

@mixin font-bold {
  font-weight: 700;
}

@mixin padding-sm($value: 0.5rem) {
  padding: $value;
}

@mixin padding-md($value: 0.75rem) {
  padding: $value;
}

@mixin padding-lg($value: 1rem) {
  padding: $value;
}

@mixin padding-xl($value: 1.5rem) {
  padding: $value;
}

@mixin padding-2xl($value: 2rem) {
  padding: $value;
}

@mixin padding-3xl($value: 3rem) {
  padding: $value;
}

@mixin margin-b($value: 0.5rem) {
  margin-bottom: $value;
}

@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: inherit;
  font-weight: 500;
  line-height: 1.4;
  border-radius: 0.5rem;
  border: 1px solid transparent;
  cursor: pointer;
  @include transition-normal;
  text-decoration: none;
  box-sizing: border-box;
  position: relative;
  white-space: nowrap;

  &:focus {
    @include focus-ring;
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
}

@mixin card-base {
  background-color: var(--white);
  border-radius: var(--form-border-radius);
  @include shadow-sm;
  @include border-light;
}

@mixin slide-in {
  animation: slideIn 0.3s ease-out;
}

@mixin fade-in {
  animation: fadeIn 0.2s ease-out;
}

@mixin spin {
  animation: spin 1s linear infinite;
}

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin responsive-grid($columns: 1, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

@mixin responsive-flex($direction: row, $gap: 1rem) {
  display: flex;
  flex-direction: $direction;
  gap: $gap;
}

@mixin color-variant($type) {
  @if $type == "primary" {
    background-color: var(--form-primary);
    color: var(--white);
    border-color: var(--form-primary);

    &:hover:not(:disabled) {
      background-color: var(--form-primary-hover);
      border-color: var(--form-primary-hover);
    }
  } @else if $type == "secondary" {
    background-color: var(--white);
    color: var(--form-gray-700);
    border-color: var(--form-gray-200);

    &:hover:not(:disabled) {
      background-color: var(--form-gray-50);
      border-color: var(--form-gray-300);
    }
  } @else if $type == "success" {
    background-color: var(--form-success);
    color: var(--white);
    border-color: var(--form-success);
  } @else if $type == "error" {
    background-color: var(--form-error);
    color: var(--white);
    border-color: var(--form-error);
  } @else if $type == "warning" {
    background-color: var(--form-warning);
    color: var(--white);
    border-color: var(--form-warning);
  }
}
